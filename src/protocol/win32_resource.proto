// Copyright 2010-2021, Google Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto2";

package mozc;

enum LanguageId {
  EN_US = 0x0409;
  JA_JP = 0x0411;
}

message Win32Resource {

  message BrandDependentString {
    optional string brand_name = 1;
    optional string value = 2;
  }

  message LocalizedBrandDependentString {
    optional LanguageId language = 1;
    repeated BrandDependentString prand_dependent_message = 2;
  }

  message StringInfo {
    optional uint32 id = 1;
    optional string name = 2;
    repeated LocalizedBrandDependentString value = 3;
  }

  enum FileType {
    APP = 1;
    DLL = 2;
  }

  message IconInfo {
    optional uint32 id = 1;
    optional string name = 2;
    repeated string path = 3;
  }

  message BitmapInfo {
    optional uint32 id = 1;
    optional string name = 2;
    repeated string path = 3;
  }

  message LocalizedVersionString {
    optional uint32 language = 1;
    repeated BrandDependentString company_name = 2;
    repeated BrandDependentString file_description = 3;
    repeated BrandDependentString internal_name = 4;
    repeated BrandDependentString legal_copyright = 5;
    repeated BrandDependentString original_file_name = 6;
    repeated BrandDependentString product_name = 7;
  }

  message VersionInfo {
    optional FileType file_type = 1;
    repeated LocalizedVersionString version_strings = 2;
  }

  optional LanguageId default_language = 1;
  repeated IconInfo icon_def = 2;
  repeated BitmapInfo bitmap_def = 3;
  repeated StringInfo string_def = 4;
  optional VersionInfo version_info = 5;
}
